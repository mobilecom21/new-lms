<div class="page-content <?php if($this->login()['userChainCount'] >0 ) { echo "padding-zero"; } ?>">
    <div class="container-fluid">
        <?php
        /**
         * @var \Zend\Form\Form $form
         */
        $this->headLink()
            ->prependStylesheet('/dist/startui/css/custom.css')
            ->prependStylesheet('/dist/startui/css/main.css')
            ->prependStylesheet('/dist/startui/css/lib/bootstrap/bootstrap.min.css')
            ->prependStylesheet('/dist/startui/css/lib/font-awesome/font-awesome.min.css');
        $this->inlineScript()
            ->prependFile('/dist/startui/scripts/validator/magic.js')
            ->prependFile('/dist/startui/scripts/tinymce/js/tinymce/tinymce.min.js')
            ->prependFile('/dist/startui/js/app.js')
            ->prependFile('/dist/startui/js/plugins.js')
            ->prependFile('/dist/startui/js/lib/bootstrap/bootstrap.min.js')
            ->prependFile('/dist/startui/js/lib/tether/tether.min.js')
            ->prependFile('/dist/startui/js/lib/jquery/jquery.min.js');
        $this->headTitle('Messages');

        $form = $this->form;

        /**
         * @var \Zend\Form\Element $submitElement
         */
        $submitElement = $form->get('submit');
        $submitElement->setAttribute('class', 'btn-inline btn-secondary');

        $form->setAttribute('action', $this->url('message/post/quiz', ['courseId' => $this->courseId]));
        echo $this->form()->openTag($form);

        echo $this->twbsFormRow($form->get('is_course'));
        echo $this->twbsFormRow($form->get('is_content'));
        echo $this->twbsFormRow($form->get('content'));
        echo $this->twbsFormRow($form->get('attachment'));
        echo $this->twbsFormRow($form->get('text'));

        echo $this->twbsFormRow($submitElement);
        echo $this->form()->closeTag();
        ?>
    </div>
</div>
<?php
$this->inlineScript()->captureStart();
echo <<<JS
    jQuery(document).ready(function ($) {
        var quiz = $('#quiz');

        var findFormElement = function (name) {
            return quiz.find('[name=' + name + ']');
        };

        // find parent element node
        var findFormElementParentNode = function (name) {
            return findFormElement(name).closest('div');
        };

        var elements = {
            isCourse: 'is_course',
            isContent: 'is_content',
            content: 'content',
            attachment: 'attachment',
            text: 'text',
            submit: 'submit'
        };
        
        findFormElement(elements.isCourse).prop('selectedIndex',0);
        findFormElement(elements.isContent).prop('selectedIndex',0);
        findFormElement(elements.content).prop('selectedIndex',0);
        findFormElement(elements.attachment).prop('selectedIndex',0);
        findFormElement(elements.text).val('');

        var isSelectQuestionTrue = function (element) {
            return parseInt($(element).val()) === 1;
        };

        var enableFormElementParent = function (name) {
            findFormElementParentNode(name).show();
        };

        var enableSubmit = function () {
            findFormElementParentNode(elements.submit).show();
        };
        
        var disableAfterElement = function(element) {
            findFormElementParentNode($(element).attr('name')).nextAll().hide();
        };

        findFormElement(elements.isCourse).on('change', function (event) {
            disableAfterElement(event.target);
            
            // stop if nothing selected
            if (!$(this).val()) {
                return false;
            }
            
            if (!isSelectQuestionTrue(event.target)) {
                enableFormElementParent(elements.text);
                enableSubmit();
                return true;
            }
            
            enableFormElementParent(elements.isContent); 
        });
        
        findFormElement(elements.isContent).on('change', function (event) {
            disableAfterElement(event.target);
  
            // stop if nothing selected
            if (!$(this).val()) {
                return false;
            }
            
            if (!isSelectQuestionTrue(event.target)) {
                enableFormElementParent(elements.text);
                enableSubmit();
                return true;
            }
            
            enableFormElementParent(elements.content); 
        });
        
        findFormElement(elements.content).on('change', function (event) {
            disableAfterElement(event.target);
  
            // stop if nothing selected
            if (!$(this).val()) {
                return false;
            }
            
            enableFormElementParent(elements.attachment);
        });
        
        findFormElement(elements.attachment).on('change', function (event) {
            disableAfterElement(event.target);
  
            // stop if nothing selected
            if (!$(this).val()) {
                return false;
            }
            
            enableFormElementParent(elements.text);
            enableSubmit();
        });
    });
JS;
$this->inlineScript()->captureEnd();